{"version":3,"file":"prompt.js","names":["_chalk","_interopRequireDefault","require","_enquirer","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","defineProperty","promptQuestion","_ref","_asyncToGenerator2","_regenerator","mark","_callee","extended","message","_yield$prompt","answer","_args","wrap","_context","prev","next","undefined","type","choices","value","map","name","pageSize","limit","prompt","concat","chalk","green","bold","underline","sent","abrupt","stop","_default","exports"],"sources":["../src/prompt.mjs"],"sourcesContent":["import chalk from \"chalk\";\nimport { prompt } from \"enquirer\";\n\nconst promptQuestion = async (extended = {}, message = `name it:`) => {\n    if (extended.type === \"list\") {\n        extended.type = \"select\";\n    }\n    if (extended.message) {\n        message = extended.message;\n    }\n    if (extended.choices && extended.choices[0].value) {\n        extended.choices = extended.choices.map(e => {\n            return { message: e.name, value: e.value };\n        });\n    }\n    if (extended.pageSize) {\n        extended.limit = extended.pageSize;\n    }\n    const { answer } = await prompt({\n        type: \"input\",\n        message: `${chalk.green.bold.underline(message)}`,\n        name: `answer`,\n        ...extended\n    });\n    return answer;\n};\n\nexport default promptQuestion;\n"],"mappings":"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","ignoreList":[]}