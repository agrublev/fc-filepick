{"version":3,"file":"index.cjs","names":["_chalk","_interopRequireDefault","require","_fs","_path","_prompt","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","defineProperty","clear","console","readDir","dir","Promise","resolve","reject","fs","readdir","err","result","format","filename","fullpath","statSync","isDirectory","concat","ex","mountChoices","_ref","folder","type","then","dirs","data","name","chalk","blue","bold","path","value","index","file","getFile","config","undefined","_config$folder","_config$type","_config$question","question","_ref2","_asyncToGenerator2","_regenerator","mark","_callee","choices","_t","wrap","_context","prev","next","prompt","sent","startsWith","replace","stop","_x","_default","exports"],"sources":["../src/index.js"],"sourcesContent":["import chalk from \"chalk\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport prompt from \"./prompt.js\";\n\nconst clear = () => {\n  console.clear();\n};\n\nfunction readDir(dir) {\n  return new Promise((resolve, reject) => {\n    fs.readdir(dir, (err, result) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve(result);\n    });\n  });\n}\n\nfunction format(filename, fullpath) {\n  try {\n    return fs.statSync(fullpath).isDirectory() ? `${filename}` : filename;\n  } catch (ex) {\n    return null;\n  }\n}\n\nfunction mountChoices({ folder, type }) {\n  return new Promise((resolve, reject) => {\n    readDir(folder).then(dirs => {\n      let data = [];\n      if (type === \"folder\") {\n        data.push({\n          name: chalk.blue.bold(`${path.resolve(folder)}`),\n          value: `--${path.resolve(folder)}`\n        });\n      }\n      data.push({\n        name: chalk.blue.bold(`Enter custom path`),\n        value: `~~custom`\n      });\n      data.push({\n        name: \"..\",\n        value: path.resolve(`${folder}/..`)\n      });\n      for (let index in dirs) {\n        let file = dirs[index];\n        let fullpath = path.resolve(`${folder}/${file}`);\n        let name = format(file, fullpath);\n        if (type === \"folder\" && !fs.statSync(fullpath).isDirectory()) {\n          continue;\n        }\n        data.push({\n          name: name,\n          value: fullpath,\n          short: fullpath\n        });\n      }\n      return resolve(data);\n    });\n  });\n}\n\nfunction getFile(config = {}) {\n  clear();\n\n  let {\n    folder = \".\",\n    type = \"folder\",\n    question = `Choose a ${config.type === \"folder\" ? \"folder\" : \"file\"}`\n  } = config;\n  return new Promise(resolve => {\n    mountChoices({ folder, type })\n      .then(async choices => {\n        const dir = await prompt(\n          {\n            type: \"autocomplete\",\n            choices: choices\n          },\n          question\n        );\n        if (type === \"folder\" && dir.startsWith(\"--\")) {\n          resolve(dir.replace(\"--\", \"\"));\n        } else if (type !== \"folder\" && !fs.statSync(dir).isDirectory()) {\n          resolve(dir);\n        } else if (dir.startsWith(\"~~custom\")) {\n          resolve(\n            await prompt(\n              {\n                type: \"input\"\n              },\n              \"Enter custom path\"\n            )\n          );\n        } else {\n          resolve(getFile({ ...config, folder: dir }));\n        }\n      })\n      .catch(e => {\n        resolve(false);\n      });\n  });\n}\n\nexport default getFile;\n"],"mappings":"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","ignoreList":[]}